#!/bin/sh
#
# Test suite wrapper for the Heimdal shared module API.
#
# Written by Russ Allbery <rra@stanford.edu>
# Copyright 2009 Board of Trustees, Leland Stanford Jr. University
#
# See LICENSE for licensing terms.

. "$SOURCE/tap/libtap.sh"
cd "$BUILD/data"

# Run the plugin program to check a password.  Takes the test description,
# the principal, the password, the expected exit status, and the expected
# output to standard error.
ok_password () {
    local desc princ password w_status w_stderr status stderr
    desc="$1"
    princ="$2"
    password="$3"
    w_status="$4"
    w_stderr="$5"
    stderr=`"$BUILD/heimdal/plugin" "$princ" "$password" 2>&1`
    status="$?"
    echo "# status: $status"
    echo "# stderr: $stderr"
    ok "$desc: status" [ "$status" -eq "$w_status" ]
    ok "$desc: stderr" [ "$stderr" = "$w_stderr" ]
}

# We need a modified krb5.conf file to add the password_dictionary setting.
# We first generate a modified copy of the krb5.conf file that doesn't contain
# this setting so that we can test error handling.
krb5conf=
for p in /etc/krb5.conf /usr/local/etc/krb5.conf data/krb5.conf ; do
    if [ -r "$p" ] ; then
        krb5conf="$p"
        sed -e '/^[ 	]*password_dictionary[ 	]*=/d' "$p" > ./krb5.conf
        KRB5_CONFIG="./krb5.conf"
        export KRB5_CONFIG
        break
    fi
done
if [ -z "$krb5conf" ] ; then
    skip_all 'no krb5.conf found, put one in tests/data/krb5.conf'
fi

# Okay, we should be good to run the test suite.
plan 42

# We don't have a password_dictionary setting, so we should fail with an
# initialization error.
ok_password "no dictionary configured" 'test@EXAMPLE.ORG' 'password' 1 \
    'password_dictionary not configured in krb5.conf'

# Now add the password dictionary configuration.
cat <<EOF >> ./krb5.conf

[appdefaults]
    krb5-strength = {
        password_dictionary = $BUILD/data/dictionary
    }

EOF

# Check the basic functionality.
ok_password "good password" 'test@EXAMPLE.ORG' 'known good password' 0 ''
ok_password "password in dictionary" 'test@EXAMPLE.ORG' 'password' 1 \
    'it is based on a dictionary word'
ok_password "password in dictionary" 'test@EXAMPLE.ORG' 'bitter' 1 \
    'it is based on a dictionary word'
ok_password "password in dictionary" 'test@EXAMPLE.ORG' 'rettib' 1 \
    'it is based on a (reversed) dictionary word'
ok_password "password too short" 'test@EXAMPLE.ORG' 'food' 1 \
    "it is too short"
ok_password "password way too short" 'test@EXAMPLE.ORG' 'foo' 1 \
    "it's WAY too short"
ok_password "password empty" 'test@EXAMPLE.ORG' '' 1 \
    "it's WAY too short"
ok_password "password all whitespace" 'test@EXAMPLE.ORG' '  	    ' 1 \
    'it does not contain enough DIFFERENT characters'
ok_password "password too simplistic" 'test@EXAMPLE.ORG' 'abcdefghi' 1 \
    'it is too simplistic/systematic'
ok_password "not enough characters" 'test@EXAMPLE.ORG' '22413411' 1 \
    'it does not contain enough DIFFERENT characters'
ok_password "password based on principal" 'someuser@EXAMPLE.ORG' 'someuser' \
    1 'Password based on username'
ok_password "password based on principal" 'someuser@EXAMPLE.ORG' 'resuemos' \
    1 'Password based on username'
ok_password "password is principal" 'test@EXAMPLE.ORG' 'test@EXAMPLE.ORG' \
    1 'Password based on username'

# Clean up.
rm -f krb5.conf
